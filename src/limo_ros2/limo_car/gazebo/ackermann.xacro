<?xml version="1.0"?>
<!-- Auto: Zhui Li | TU Braunschweig | Converti vers Gazebo Sim (Harmonic/≥8) -->
<robot name="limo_ackermann" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- ============================ Constantes / paramètres ============================ -->
  <xacro:property name="M_PI" value="3.14159"/>

  <xacro:property name="base_mass" value="4.34"/>
  <xacro:property name="base_x_size" value="0.19"/>
  <xacro:property name="base_y_size" value="0.31"/>
  <xacro:property name="base_z_size" value="0.12"/>

  <xacro:property name="wheelbase" value="0.24"/>
  <xacro:property name="track" value="0.168"/>
  <xacro:property name="wheel_vertical_offset" value="-0.10"/>

  <xacro:property name="wheel_mass" value="0.5"/>
  <xacro:property name="wheel_length" value="0.045"/>
  <xacro:property name="wheel_radius" value="0.045"/>

  <!-- Inerties -->
  <xacro:macro name="cylinder_inertial_matrix" params="m r h">
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="${m}"/>
      <inertia ixx="${m*(3*r*r+h*h)/12}" ixy="0" ixz="0"
               iyy="${m*(3*r*r+h*h)/12}" iyz="0"
               izz="${m*r*r/2}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="box_inertial_matrix" params="m w l h">
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="${m}"/>
      <inertia ixx="${m*(w*w+h*h)/12}" ixy="0" ixz="0"
               iyy="${m*(h*h+l*l)/12}" iyz="0"
               izz="${m*(w*w+l*l)/12}"/>
    </inertial>
  </xacro:macro>

  <!-- =========================== Macros : pivots direction =========================== -->
  <!-- Avant gauche -->
  <xacro:macro name="limo_left_steering_hinge" params="parent_prefix wheel_prefix *joint_pose">
    <link name="${wheel_prefix}_steer_link">
      <inertial>
        <mass value="0.25"/>
        <inertia ixx="0.00525" ixy="0" ixz="0" iyy="0.00035" iyz="0" izz="0.00525"/>
        <origin xyz="0 0 0"/>
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry><cylinder length="0.0001" radius="0.0001"/></geometry>
      </visual>
      <collision>
        <origin xyz="0 ${wheel_length/2} 0" rpy="${M_PI/2} 0 0"/>
        <geometry><cylinder length="${wheel_length}" radius="${wheel_radius-0.01}"/></geometry>
      </collision>
    </link>

    <joint name="${wheel_prefix}_steer_joint" type="revolute">
      <parent link="${parent_prefix}"/>
      <child link="${wheel_prefix}_steer_link"/>
      <xacro:insert_block name="joint_pose"/>
      <axis xyz="0 0 1"/>
      <limit lower="-0.523598767" upper="0.523598767" effort="5" velocity="0.5"/>
      <dynamics damping="1.0" friction="2.0"/>
    </joint>

    <transmission name="${wheel_prefix}_hinge_trans" type="SimpleTransmission">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${wheel_prefix}_hinge_motor">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${wheel_prefix}_steer_joint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
    </transmission>

    <link name="${wheel_prefix}_wheel_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="model://limo_ackermann/meshes/limo_wheel.dae" scale="1.2 1.2 1.2"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 ${wheel_length/2} 0" rpy="${M_PI/2} 0 0"/>
        <geometry><cylinder length="${wheel_length}" radius="${wheel_radius}"/></geometry>
      </collision>
      <xacro:cylinder_inertial_matrix m="${wheel_mass}" r="${wheel_radius}" h="${wheel_length}"/>
    </link>

    <joint name="${wheel_prefix}_wheel_joint" type="continuous">
      <parent link="${wheel_prefix}_steer_link"/>
      <child link="${wheel_prefix}_wheel_link"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>

    <transmission name="${wheel_prefix}_wheel_trans" type="SimpleTransmission">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${wheel_prefix}_wheel_motor">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${wheel_prefix}_wheel_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>
  </xacro:macro>

  <!-- Avant droit -->
  <xacro:macro name="limo_right_steering_hinge" params="parent_prefix wheel_prefix *joint_pose">
    <link name="${wheel_prefix}_steer_link">
      <inertial>
        <mass value="0.25"/>
        <inertia ixx="0.00525" ixy="0" ixz="0" iyy="0.00035" iyz="0" izz="0.00525"/>
        <origin xyz="0 0 0"/>
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry><cylinder length="0.0001" radius="0.0001"/></geometry>
      </visual>
      <collision>
        <origin xyz="0 ${wheel_length/2} 0" rpy="${M_PI/2} 0 0"/>
        <geometry><cylinder length="${wheel_length}" radius="${wheel_radius-0.01}"/></geometry>
      </collision>
    </link>

    <joint name="${wheel_prefix}_steer_joint" type="revolute">
      <parent link="${parent_prefix}"/>
      <child link="${wheel_prefix}_steer_link"/>
      <xacro:insert_block name="joint_pose"/>
      <axis xyz="0 0 -1"/>
      <limit lower="-0.523598767" upper="0.523598767" effort="5" velocity="0.5"/>
      <dynamics damping="1.0" friction="2.0"/>
    </joint>

    <transmission name="${wheel_prefix}_hinge_trans" type="SimpleTransmission">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${wheel_prefix}_hinge_motor">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${wheel_prefix}_steer_joint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
    </transmission>

    <link name="${wheel_prefix}_wheel_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="model://limo_ackermann/meshes/limo_wheel.dae" scale="1.2 1.2 1.2"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 ${wheel_length/2} 0" rpy="${M_PI/2} 0 0"/>
        <geometry><cylinder length="${wheel_length}" radius="${wheel_radius}"/></geometry>
      </collision>
      <xacro:cylinder_inertial_matrix m="${wheel_mass}" r="${wheel_radius}" h="${wheel_length}"/>
    </link>

    <joint name="${wheel_prefix}_wheel_joint" type="continuous">
      <parent link="${wheel_prefix}_steer_link"/>
      <child link="${wheel_prefix}_wheel_link"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <axis xyz="0 -1 0"/>
    </joint>

    <transmission name="${wheel_prefix}_wheel_trans" type="SimpleTransmission">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${wheel_prefix}_wheel_motor">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${wheel_prefix}_wheel_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>
  </xacro:macro>

  <!-- ================================ Châssis / roues ================================ -->
  <xacro:macro name="limo_ackermann">

    <link name="base_link">
      <visual>
        <origin xyz="0 0 -0.15" rpy="0 0 ${M_PI/2}"/>
        <geometry>
          <mesh filename="model://limo_ackermann/meshes/limo_base.dae" scale="1.2 1.2 1.2"/>
        </geometry>
        <!-- couleur via URDF (pas de balise Gazebo Classic) -->
        <material name="base_black">
          <color rgba="0 0 0 0.5"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry><box size="${base_x_size} ${base_y_size} ${base_z_size}"/></geometry>
      </collision>
      <xacro:box_inertial_matrix m="${base_mass}" w="${base_x_size}" l="${base_y_size}" h="${base_z_size}"/>
    </link>

    <!-- Roues arrières -->
    <link name="rear_left_wheel_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry><mesh filename="$(find limo_car)/meshes/limo_wheel.dae" scale="1.2 1.2 1.2"/></geometry>
      </visual>
      <collision>
        <origin xyz="0 ${wheel_length/2} 0" rpy="${M_PI/2} 0 0"/>
        <geometry><cylinder length="${wheel_length}" radius="${wheel_radius}"/></geometry>
      </collision>
      <xacro:cylinder_inertial_matrix m="${wheel_mass}" r="${wheel_radius}" h="${wheel_length}"/>
    </link>

    <joint name="rear_left_wheel_joint" type="continuous">
      <parent link="base_link"/>
      <child link="rear_left_wheel_link"/>
      <origin xyz="${-wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>

    <transmission name="rear_left_wheel_trans" type="SimpleTransmission">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="rear_left_wheel_motor">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="rear_left_wheel_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>

    <link name="rear_right_wheel_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry><mesh filename="model://limo_ackermann/meshes/limo_wheel.dae" scale="1.2 1.2 1.2"/></geometry>
      </visual>
      <collision>
        <origin xyz="0 ${wheel_length/2} 0" rpy="${M_PI/2} 0 0"/>
        <geometry><cylinder length="${wheel_length}" radius="${wheel_radius}"/></geometry>
      </collision>
      <xacro:cylinder_inertial_matrix m="${wheel_mass}" r="${wheel_radius}" h="${wheel_length}"/>
    </link>

    <joint name="rear_right_wheel_joint" type="continuous">
      <parent link="base_link"/>
      <child link="rear_right_wheel_link"/>
      <origin xyz="${-wheelbase/2} ${-track/2} ${wheel_vertical_offset}" rpy="${M_PI} 0 0"/>
      <axis xyz="0 -1 0"/>
    </joint>

    <transmission name="rear_right_wheel_trans" type="SimpleTransmission">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="rear_right_wheel_motor">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="rear_right_wheel_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>

    <!-- Appel des macros de direction (avant) -->
    <xacro:limo_left_steering_hinge parent_prefix="base_link" wheel_prefix="front_left">
      <origin xyz="${wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="0 0 0"/>
    </xacro:limo_left_steering_hinge>

    <xacro:limo_right_steering_hinge parent_prefix="base_link" wheel_prefix="front_right">
      <origin xyz="${wheelbase/2} ${-track/2} ${wheel_vertical_offset}" rpy="${M_PI} 0 0"/>
    </xacro:limo_right_steering_hinge>

    <!-- ============================ Gazebo Sim : Plugins ============================ -->
    <!-- 1) ros2_control pour exposer les états (et des contrôleurs ROS 2 si besoin) -->
    <ros2_control name="GazeboSimSystem" type="system">
      <hardware>
        <!-- plugin matériel par défaut de gz_ros2_control -->
        <plugin>gz_ros2_control/GazeboSimSystem</plugin>
      </hardware>

      <!-- Interfaces d'ÉTAT uniquement (le pilotage est assuré par AckermannSteering) -->
      <joint name="front_left_steer_joint">
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
      </joint>
      <joint name="front_right_steer_joint">
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
      </joint>

      <joint name="front_left_wheel_joint">
        <state_interface name="position"/>
        <state_interface name="velocity"/>
      </joint>
      <joint name="front_right_wheel_joint">
        <state_interface name="position"/>
        <state_interface name="velocity"/>
      </joint>
      <joint name="rear_left_wheel_joint">
        <state_interface name="position"/>
        <state_interface name="velocity"/>
      </joint>
      <joint name="rear_right_wheel_joint">
        <state_interface name="position"/>
        <state_interface name="velocity"/>
      </joint>
    </ros2_control>

    <!-- 2) Chargeur Gazebo Sim du ros2_control -->
    <gazebo>
      <plugin filename="gz_ros2_control-system"
              name="gz_ros2_control::GazeboSimROS2ControlPlugin">
        <!-- on peut ajouter <parameters> vers un YAML de contrôleurs si voulu -->
        <robot_param>robot_description</robot_param>
        <robot_param_node>robot_state_publisher</robot_param_node>
      </plugin>

      <!-- 3) Système Ackermann natif Gazebo Sim -->
      <plugin filename="gz-sim-ackermann-steering-system"
              name="gz::sim::systems::AckermannSteering">
        <!-- roues motrices (arrière) et roues avant (si entraînées) -->
        <left_joint>rear_left_wheel_joint</left_joint>
        <right_joint>rear_right_wheel_joint</right_joint>
        <left_joint>front_left_wheel_joint</left_joint>
        <right_joint>front_right_wheel_joint</right_joint>

        <!-- pivots de direction -->
        <left_steering_joint>front_left_steer_joint</left_steering_joint>
        <right_steering_joint>front_right_steer_joint</right_steering_joint>

        <!-- paramètres géométriques / dynamiques -->
        <wheel_base>${wheelbase}</wheel_base>
        <wheel_separation>${track}</wheel_separation>
        <wheel_radius>${wheel_radius}</wheel_radius>
        <steering_limit>0.523598767</steering_limit> <!-- ≈ 30° -->
        <steer_p_gain>10000</steer_p_gain>

        <!-- topics & odométrie (Transport Gazebo) -->
        <topic>cmd_vel</topic>                <!-- à bridger depuis ROS 2 si nécessaire -->
        <odom_publish_frequency>50</odom_publish_frequency>
        <frame_id>odom</frame_id>
        <child_frame_id>base_link</child_frame_id>
      </plugin>
    </gazebo>

  </xacro:macro>
</robot>
