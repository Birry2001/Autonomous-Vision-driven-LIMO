<?xml version="1.0"?>
<robot name="limo_ackerman" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- === Imports des sous-xacro (géométrie des capteurs + train avant) === -->
  <xacro:arg name="robot_namespace" default="/" />
  <xacro:include filename="$(find limo_description)/urdf/limo_xacro.xacro" />
  <xacro:include filename="$(find limo_description)/urdf/limo_steering_hinge.xacro" />

  <!-- === Matériaux (évite les warnings "material ... undefined") === -->
  <material name="laser_material"><color rgba="0.2 0.7 1.0 1.0"/></material>
  <material name="depth_camera_material"><color rgba="0.3 0.3 0.3 1.0"/></material>
  <material name="imu_material"><color rgba="0.9 0.5 0.1 1.0"/></material>

  <!-- === Paramètres physiques clés (manuel LIMO Pro) ===
       - wheelbase  : empattement (m)
       - track      : voie AV/AR (m)  -> 0.175 m
       - wheel_radius : 0.045 m (diamètre 0.09 m)
       - steering_limit : ~0.5 rad  (≈ 28.6°) -> ~0.4 m de rayon mini
  -->
  <xacro:property name="M_PI" value="3.141592653589793"/>
  <xacro:property name="base_x_size" value="0.13"/>
  <xacro:property name="base_y_size" value="0.12"/>
  <xacro:property name="base_z_size" value="0.10"/>
  <xacro:property name="wheelbase" value="0.20"/>         <!-- 200 mm -->
  <xacro:property name="track" value="0.175"/>            <!-- 175 mm -->
  <xacro:property name="wheel_vertical_offset" value="-0.100998"/>
  <xacro:property name="base_mass" value="2.1557"/>

  <xacro:property name="wheel_length" value="0.045"/>
  <xacro:property name="wheel_radius" value="0.045"/>
  <xacro:property name="steering_limit" value="0.5"/>     <!-- rad -->

  <!-- === Frames de base === -->
  <link name="base_footprint"/>

  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child  link="base_link"/>
    <origin xyz="0.0 0.0 0.15" rpy="0 0 0"/>
  </joint>

  <!-- === Châssis === -->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 -0.15" rpy="0 0 1.57"/>
      <geometry>
        <mesh filename="file:///home/nochi/projet_limo_autonome/Autonomous-Vision-driven-LIMO/install/limo_description/share/limo_description/meshes/limo_base.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${base_x_size} ${base_y_size} ${base_z_size}"/>
      </geometry>
    </collision>
  </link>

  <!-- Inertie concentrée (simplifiée) -->
  <link name="inertial_link">
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="${base_mass}"/>
      <inertia ixx="0.24" ixy="0" ixz="0" iyy="0.96" iyz="0" izz="0.96"/>
    </inertial>
  </link>
  <joint name="inertial_joint" type="fixed">
    <parent link="base_link"/>
    <child  link="inertial_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>

  <!-- === Capteurs (définis dans limo_xacro.xacro) === -->
  <xacro:limo_laser parent_prefix="base_link" frame_prefix="laser">
    <origin xyz="0.103 0 -0.034" rpy="0 0 0"/>
  </xacro:limo_laser>

  <xacro:limo_depth_camera parent_prefix="base_link" frame_prefix="depth_camera">
    <origin xyz="0.084 0 0.03" rpy="0 0 0"/>
  </xacro:limo_depth_camera>

  <xacro:limo_imu parent_prefix="base_link" frame_prefix="imu">
    <origin xyz="0.0 0 -0.1" rpy="0 0 0"/>
  </xacro:limo_imu>

  <!-- === Train avant directionnel (les xacro ci-dessous créent notamment :
         - joints de braquage : left_steering_hinge_wheel / right_steering_hinge_wheel (révolute autour de Z)
         - joints roues AV    : front_left_wheel / front_right_wheel (révolute autour de Y)
         - links roues AV     : front_left_wheel_link / front_right_wheel_link)
       Les positions utilisent wheelbase/track issus des specs. === -->
  <xacro:limo_left_steering_hinge  parent_prefix="base_link" wheel_prefix="left_steering_hinge">
    <origin xyz="${ wheelbase/2 } ${  track/2 } ${wheel_vertical_offset}" rpy="0 0 0"/>
  </xacro:limo_left_steering_hinge>

  <xacro:limo_right_steering_hinge parent_prefix="base_link" wheel_prefix="right_steering_hinge">
    <origin xyz="${ wheelbase/2 } ${ -track/2 } ${wheel_vertical_offset}" rpy="${M_PI} 0 0"/>
  </xacro:limo_right_steering_hinge>

  <!-- === Essieu arrière (roues libres en Ackermann) === -->
  <link name="rear_left_wheel_link">
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="0.5"/>
      <inertia ixx="0.01055" ixy="0" ixz="0" iyy="0.00075" iyz="0" izz="0.01055"/>
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/nochi/projet_limo_autonome/Autonomous-Vision-driven-LIMO/install/limo_description/share/limo_description/meshes/limo_wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 ${wheel_length/2} 0" rpy="1.57 0 0"/>
      <geometry>
        <cylinder length="${wheel_length}" radius="${wheel_radius}"/>
      </geometry>
      <!-- Friction (SDF moderne via surface/ode) -->
      <surface>
        <friction>
          <ode>
            <mu>1.0</mu>
            <mu2>1.0</mu2>
          </ode>
        </friction>
      </surface>
    </collision>
  </link>

  <joint name="rear_left_wheel" type="continuous">
    <parent link="base_link"/>
    <child  link="rear_left_wheel_link"/>
    <origin xyz="${-wheelbase/2} ${ track/2 } ${wheel_vertical_offset}" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.02"/>
  </joint>

  <link name="rear_right_wheel_link">
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="0.5"/>
      <inertia ixx="0.01055" ixy="0" ixz="0" iyy="0.00075" iyz="0" izz="0.01055"/>
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/nochi/projet_limo_autonome/Autonomous-Vision-driven-LIMO/install/limo_description/share/limo_description/meshes/limo_wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 ${wheel_length/2} 0" rpy="1.57 0 0"/>
      <geometry>
        <cylinder length="${wheel_length}" radius="${wheel_radius}"/>
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>1.0</mu>
            <mu2>1.0</mu2>
          </ode>
        </friction>
      </surface>
    </collision>
  </link>

  <joint name="rear_right_wheel" type="continuous">
    <parent link="base_link"/>
    <child  link="rear_right_wheel_link"/>
    <origin xyz="${-wheelbase/2} ${-track/2 } ${wheel_vertical_offset}" rpy="${M_PI} 0 0"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.02"/>
  </joint>

  <!-- === Ajuste aussi la friction des roues AV (links créés par les xacro inclus) === -->
  <gazebo reference="front_left_wheel_link">
    <material>Gazebo/Black</material>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
  </gazebo>
  <gazebo reference="front_right_wheel_link">
    <material>Gazebo/Black</material>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
  </gazebo>

  <!-- ===================================================================== -->
  <!--                 PLUGIN Ackermann (Gazebo Sim v8)                      -->
  <!--  - Traction : roues AV (front_left_wheel / front_right_wheel)         -->
  <!--  - Direction: pivots AV (left_steering_hinge_wheel / right_..._wheel) -->
  <!--  - Topics   : par défaut /model/<name>/cmd_vel, /odometry, /tf        -->
  <!-- ===================================================================== -->
  <gazebo>
    <plugin filename="gz-sim-ackermann-steering-system"
            name="gz::sim::systems::AckermannSteering">
      <!-- Joints d’entraînement (rotation des roues AV autour de Y) -->
      <left_joint>front_left_wheel</left_joint>
      <right_joint>front_right_wheel</right_joint>

      <!-- Joints de braquage (révolute autour de Z sur les porte-fusées) -->
      <left_steering_joint>left_steering_hinge_wheel</left_steering_joint>
      <right_steering_joint>right_steering_hinge_wheel</right_steering_joint>

      <!-- Paramètres géométriques réels -->
      <wheel_radius>${wheel_radius}</wheel_radius>
      <wheel_base>${wheelbase}</wheel_base>
      <wheel_separation>${track}</wheel_separation>

      <!-- Limite de braquage (rad) ≈ 0.5 rad pour ~0.4 m de rayon mini -->
      <steering_limit>${steering_limit}</steering_limit>

      <!-- Cadres de l’odométrie (utiles côté ROS via bridge) -->
      <frame_id>odom</frame_id>
      <child_frame_id>base_link</child_frame_id>

      <!-- (Option) décommente si tu veux figer les noms de topics GZ
      <topic>/model/limo/cmd_vel</topic>
      <odom_topic>/model/limo/odometry</odom_topic>
      <tf_topic>/model/limo/tf</tf_topic>
      -->
    </plugin>
  </gazebo>

</robot>

